/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_bluetooth_NativeTestInterfaces */

#ifndef _Included_com_intel_bluetooth_NativeTestInterfaces
#define _Included_com_intel_bluetooth_NativeTestInterfaces
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testUUIDConversion
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testUUIDConversion
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferCreate
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferCreate
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferClose
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferWrite
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferWrite
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferRead
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferRead__J_3B
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferRead
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferRead__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferSkip
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferSkip
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferAvailable
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferAvailable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferIsOverflown
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferIsOverflown
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testReceiveBufferIsCorrupted
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testReceiveBufferIsCorrupted
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testThrowException
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testThrowException
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testDebug
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testDebug
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testOsXDataElementConversion
 * Signature: (IIJ[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testOsXDataElementConversion
  (JNIEnv *, jclass, jint, jint, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testOsXRunnableLoop
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testOsXRunnableLoop
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_intel_bluetooth_NativeTestInterfaces
 * Method:    testWIDCOMMConstants
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_NativeTestInterfaces_testWIDCOMMConstants
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
