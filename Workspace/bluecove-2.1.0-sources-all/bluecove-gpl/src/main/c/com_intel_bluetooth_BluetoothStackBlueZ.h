/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_bluetooth_BluetoothStackBlueZ */

#ifndef _Included_com_intel_bluetooth_BluetoothStackBlueZ
#define _Included_com_intel_bluetooth_BluetoothStackBlueZ
#ifdef __cplusplus
extern "C" {
#endif
#undef com_intel_bluetooth_BluetoothStackBlueZ_NATIVE_LIBRARY_VERSION
#define com_intel_bluetooth_BluetoothStackBlueZ_NATIVE_LIBRARY_VERSION 2010051L
#undef com_intel_bluetooth_BluetoothStackBlueZ_ATTR_RETRIEVABLE_MAX
#define com_intel_bluetooth_BluetoothStackBlueZ_ATTR_RETRIEVABLE_MAX 256L
#undef com_intel_bluetooth_BluetoothStackBlueZ_LISTEN_BACKLOG_RFCOMM
#define com_intel_bluetooth_BluetoothStackBlueZ_LISTEN_BACKLOG_RFCOMM 4L
#undef com_intel_bluetooth_BluetoothStackBlueZ_LISTEN_BACKLOG_L2CAP
#define com_intel_bluetooth_BluetoothStackBlueZ_LISTEN_BACKLOG_L2CAP 4L
/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    isNativeCodeLoaded
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_isNativeCodeLoaded
  (JNIEnv *, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getLibraryVersionNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getLibraryVersionNative
  (JNIEnv *, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeGetDeviceID
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeGetDeviceID
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeOpenDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeOpenDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeCloseDevice
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeCloseDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    enableNativeDebug
 * Signature: (Ljava/lang/Class;Z)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_enableNativeDebug
  (JNIEnv *, jobject, jclass, jboolean);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getLocalDevicesID
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getLocalDevicesID
  (JNIEnv *, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getLocalDeviceBluetoothAddressImpl
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getLocalDeviceBluetoothAddressImpl
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeGetDeviceClass
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeGetDeviceClass
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeGetDeviceName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeGetDeviceName
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeGetLocalDeviceDiscoverable
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeGetLocalDeviceDiscoverable
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    nativeSetLocalDeviceDiscoverable
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_nativeSetLocalDeviceDiscoverable
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getRemoteDeviceVersionInfoImpl
 * Signature: (IJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getRemoteDeviceVersionInfoImpl
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getRemoteDeviceRSSIImpl
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getRemoteDeviceRSSIImpl
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    runDeviceInquiryImpl
 * Signature: (Lcom/intel/bluetooth/DeviceInquiryRunnable;Lcom/intel/bluetooth/DeviceInquiryThread;IIIIILjavax/bluetooth/DiscoveryListener;)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_runDeviceInquiryImpl
  (JNIEnv *, jobject, jobject, jobject, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    deviceInquiryCancelImpl
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_deviceInquiryCancelImpl
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getRemoteDeviceFriendlyNameImpl
 * Signature: (IJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getRemoteDeviceFriendlyNameImpl
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    runSearchServicesImpl
 * Signature: (Lcom/intel/bluetooth/SearchServicesThread;J[[BJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_runSearchServicesImpl
  (JNIEnv *, jobject, jobject, jlong, jobjectArray, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    populateServiceRecordAttributeValuesImpl
 * Signature: (JJJJ[ILcom/intel/bluetooth/ServiceRecordImpl;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_populateServiceRecordAttributeValuesImpl
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jintArray, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    openSDPSessionImpl
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_openSDPSessionImpl
  (JNIEnv *, jobject);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    closeSDPSessionImpl
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_closeSDPSessionImpl
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    registerSDPServiceImpl
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_registerSDPServiceImpl
  (JNIEnv *, jobject, jlong, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    updateSDPServiceImpl
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_updateSDPServiceImpl
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    unregisterSDPServiceImpl
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_unregisterSDPServiceImpl
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfOpenClientConnectionImpl
 * Signature: (JJIZZI)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfOpenClientConnectionImpl
  (JNIEnv *, jobject, jlong, jlong, jint, jboolean, jboolean, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfCloseClientConnection
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfCloseClientConnection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    rfGetSecurityOptImpl
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_rfGetSecurityOptImpl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    rfServerOpenImpl
 * Signature: (JZZZZZI)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_rfServerOpenImpl
  (JNIEnv *, jobject, jlong, jboolean, jboolean, jboolean, jboolean, jboolean, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    rfServerGetChannelIDImpl
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_rfServerGetChannelIDImpl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    rfServerCloseImpl
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_rfServerCloseImpl
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    rfServerAcceptAndOpenRfServerConnection
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_rfServerAcceptAndOpenRfServerConnection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfRead
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfRead
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfReadAvailable
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfReadAvailable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfWrite
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfWrite__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfWrite
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfWrite__J_3BII
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    connectionRfFlush
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_connectionRfFlush
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    getConnectionRfRemoteAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_getConnectionRfRemoteAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2OpenClientConnectionImpl
 * Signature: (JJIZZIII)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2OpenClientConnectionImpl
  (JNIEnv *, jobject, jlong, jlong, jint, jboolean, jboolean, jint, jint, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2CloseClientConnection
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2CloseClientConnection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2ServerOpenImpl
 * Signature: (JZZZZZIIII)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2ServerOpenImpl
  (JNIEnv *, jobject, jlong, jboolean, jboolean, jboolean, jboolean, jboolean, jint, jint, jint, jint);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2ServerGetPSMImpl
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2ServerGetPSMImpl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2ServerAcceptAndOpenServerConnection
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2ServerAcceptAndOpenServerConnection
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2ServerCloseImpl
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2ServerCloseImpl
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2Ready
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2Ready
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2Receive
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2Receive
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2Send
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2Send
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2GetReceiveMTU
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2GetReceiveMTU
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2GetTransmitMTU
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2GetTransmitMTU
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2RemoteAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2RemoteAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_intel_bluetooth_BluetoothStackBlueZ
 * Method:    l2GetSecurityOpt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_intel_bluetooth_BluetoothStackBlueZ_l2GetSecurityOpt
  (JNIEnv *, jobject, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
