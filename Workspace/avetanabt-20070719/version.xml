<?xml version="1.0" ?>
<avetanaBluetooth>
 <version value="1">
  <revision value="0">
   <build value="0" date="2004-12-01" time="18:00">
       Initiation of the versioning system.
       Last changes were made in libjbluez.jnilib to be able to deply avetanaBluetooth.jar in applets on MacOS X.
    </build>
    <build value="1" date="2004-12-03" time="16:00">
      Added support for remote authentication of devices while connections are already established.
    </build>
    <build value="2" date="2004-12-08" time="16:52">
 		Fixed bug in MInputStream.read(), where the byte transferred and casted to an int needed to be and-0xff'ed.
 		BluetoothStream in ObexInputStream.
    </build>
    <build value="3" date="2004-12-10" time="23:00">
    		DataElement Strings changed to UTF-8 to support Umlauts. MacOS X can't handle that yet.
		Added shutdownhook to delete loaded library in linux and OSX. This does not work with Windows
    </build>  
    <build value="4" date="2004-12-13" time="14:30">
		Moved Connector class to de.avetana.bluetooth.connection.Connector.
		javax.microedition.io.Connector still exists as an empty subclass of above Connector.
		Added com.sun.cdc.io.[btspp|btl2cap|btgoep].Protocol classes to support CrEme's mapping of Bluetooth Connection URLs.
    </build>  
    <build value="5" date="2004-12-16" time="00:30">
		Added getConnectorURL() to LocalServiceRecord
		Changed acceptAndOpen() Methods in RFComm and L2CAP Notifiers to remove the SDP Entry when the connection is established.
		close() still tries to remove it but it won't do anything.
		After the connection is established, acceptAndOpen() can be called again without having to close the notifier or the connection.
		This was mainly needed to be compatible with blueCove.
    </build> 
    <build value="6" date="2004-12-26" time="22:30">
       Added class de.avetana.bluetooth.hci.Rssi to get the Rssi Value for connection quality to a remote device.
    </build>
    <build value="7" date="2004-12-27" time="21:10">
		Changed the Temp-Path on WinCE to \Temp if java.io.tmpdir is not set correctly.
    </build>
    <build value="8" date="2004-12-28" time="09:30">
		Changed the library name from jbluez to avetanaBT.
		Worked around CrEme bugs that prevented LibLoader from working on older WinCE versions.
		Changes in Rssi to work around Widcomm bug.
    </build>
    <build value="9" date="2005-01-05" time="21:10">
		Updated LocalServiceRecord class to add a SUPPORTED_FORMATS_LIST Attribute to each OBEX Serivice Record. This fixed the problem for the Nokia 6600
	</build>
    <build value="9" date="2005-01-11" time="11:10">
		Changed the JSRTest class to send a VCard object by default. Many phones don't accept anything else. avetana.vcf is included in the JAR.
	</build>
    <build value="10" date="2005-01-11" time="22:10">
      MAJOR updates in Obex command handling. ConnectionID handling now works so OBEX File transfer can be realized.
    </build>
    <build value="11" date="2005-01-13" time="14:59">
		Setting the returncode of OperationImpl correctly
    </build>
    <build value="12" date="2005-01-17" time="10:04">
		Update in SessionNotifierImpl not to close the connectionNotifier on DISCONNECT. An Obex server now accepts connections as long as it is not
		explicitly closed.
    </build>
    <build value="13" date="2005-01-18" time="22:00">
		Reversed the changes from build 12 because they were not compliant with the specification.
    </build>
    <build value="14" date="2005-01-19" time="07:30">
		put a synchronized statement around the block in SessionNotifierImpl that calls inDisconnect and closes the stream connection. When
		a disconnect command has been called. This is to prevent that acceptAndOpen is called before the connection is closed.
    </build>
    <build value="15" date="2005-01-21" time="14:16">
    	  More updates in OBEX. 
    	  Added support for setPath in SessionNotifierImpl.
    	  Changed all UTF-16BE encodings to UTF-8 plus manual conversion to UTF-16BE because J2ME devices apparently do not supper 16BE encoding.
    </build>
    <build value="16" date="2005-01-21" time="20:51">
    	 Added version information in BlueZ.
    </build>
    <build value="17" date="2005-01-22" time="17:00">
    	 Changed method getVector() in DataElement to protected to match specification
    </build>
    <build value="18" date="2005-01-24" time="09:17">
    	 Removed the Excption that was thrown on LocalDevice.setDiscoverabelMode() to match the specification. (the function is useless on Windows and MacOS X anyways)
    </build>
    <build value="19" date="2005-01-24" time="23:17">
		Added support for OBEX Authentication.
    </build>
   <build value="20" date="2005-01-26" time="17:24">
		Fixed a bug in loading the version.xml file that made it crash on PocketPC.
    </build>
   <build value="21" date="2005-01-31" time="16:00">
		Irnoring last 0-byte on 0-terminated DataElements (Strings, URLs...).
    </build>
   <build value="22" date="2005-02-01" time="21:09">
		Changed searchServices in DiscoveryAgent to add attributes 0x00 - 0x04 when they are not specified in the list of attributes to retreive.
    </build>
   <build value="23" date="2005-02-02" time="14:14">
	  Fixed a threading problem in ServiceFinderPane where searchServices was called from inquiryCompleted, which did not work in Linux.
    </build>
   <build value="24" date="2005-02-02" time="22:16">
		Changed BlueZ.java to synchronize read/write/close calls only within the same fid. 
    </build>
   <build value="25" date="2005-02-08" time="07">
		Implemented the encrypt method in Windows and MacOS native libs. (Both just throw an exception).
		Removed a memory leak in Linux.
		Changed a try / catch Statement in LibLoader to work with CrEme 3.25
    </build>
   <build value="26" date="2005-02-14" time="13:41">
		Changed the Linux-Native library to be able to detect closing of an L2CAP-Channel.
    </build>
   <build value="27" date="2005-02-18" time="23:41">
		toString in JSR82URL changed not to show the channel number for local connections.
    </build>
   <build value="28" date="2005-02-23" time="07:51">
		Set timeout on opening RFComm connections with Widcomm to 40sec. And closing Connections when a connection fails.
    </build>
   <build value="29" date="2005-02-25" time="10:51">
		Updates in native libraries for Windows and MacOS X not to loose l2cap packets when the remote end closes the connection.
    </build>
   <build value="30" date="2005-02-28" time="13:51">
	   Deleted close() method in L2CAPConnectionImpl that was hiding the Method implementation is superclass BTConenction
    </build>
   <build value="31" date="2005-02-29" time="07:21">
		Implemented the getResponseCode() method in HeaderSetImpl.
    </build>
   <build value="32" date="2005-03-03" time="09:47">
		Fixed a bug in OperationImpl, where headers from a GET command in a ServerConnection were lost.
    </build>
   <build value="33" date="2005-03-10" time="17:07">
		Exchanged the UUIDs in the ServiceClassIDList to have the personal UUID fist. Widcomm did not properly handle
		The Service record if the General UUID was first.
    </build>
    <build value="34" date="2005-03-18" time="15:07">
	  Updates in inquiry error handling.
	  Added Link Quality code from Christiano di Flora diflora@unina.it
    </build>
    <build value="35" date="2005-03-18" time="15:07">
	 Added patches to compile in Java5
    </build>
   <build value="36" date="2005-03-18" time="15:07">
	 Update in OBEX-GET Client and Server to handle large files.
	 Updates in Windows native code to prevent Threading issues when sending and receiveing small packets.
    </build>    
   <build value="37" date="2005-04-11" time="23:07">
	  Fixed a Bug in windows that somtimes caused UUID mismatches in service searches.
	  InqTest now supports short UUIDs
    </build>    
   <build value="38" date="2005-04-12" time="09:47">
	  Added support for Stack down events in Windows. All notifiers and connections will get closed.
    </build>    
   <build value="39" date="2005-04-12" time="09:47">
	 Fixed a problem in Windows native L2CAP code where a threading issue could cause the wrong packet to be read.
    </build>    
   </revision>
   <revision value="1">
    <build value="0" date="2005-04-27">
     Moved all RFComm classes to de.avetana.bluetooth.rfcomm and deleted LocalConnection and LocalConnectionNotifier.
     Changed the data-receiving model from polling Java->JNI to having JNI notify Java of new incoming data. This data is stored
     in a Vector in the BTConnection class from where it is used in either RFCommConenction ot L2CAPConenction.
     Added support for native inquiries in MacOS X 10.4. Many native changes for OS X.
    </build>
    <build value="1" date="2005-05-04">
    	 replaced all Vector.add() calls by addElement() calls to fit in CrEme java 1.1
    </build>
        <build value="2" date="2005-05-04">
    	 replaced all Vector.remove() calls by removeElement() calls to fit in CrEme java 1.1
    </build>
    <build value="3" date="2005-05-10">
 		MacOS X.4 fixes for inquiries.
		OBEX fix for wrong TypeIDs
    </build>
    <build value="4" date="2005-05-30">
	  L2CAP PSM Numbers are now interpreted as Hexadecimal numbers.
    </build>
    <build value="5" date="2005-06-03">
	  Fixed a native bug in OS X that could cause inquiries to crash.
    </build>
    <build value="6" date="2005-06-10">
	  Fixed a bug in RFCommStream read() where & 0xff was missing on single byte reads.
    </build>
    <build value="7" date="2005-06-11">
	  Changed Windows native code to always try to reuse PSM 4097 when offering new L2CAP Connections. This makes the PSMs toggle between 4097 and 4099.
    </build>
    <build value="8" date="2005-06-13">
	  Fixed a bug that prevented ConnectionNotifier instances to retreive their RemoteDevice.
    </build>
    <build value="9" date="2005-06-14">
	  Fixed a bug in OperationImpl that could cause a Negative Array Size Exception when sending large packets through OBEX.
    </build>
    <build value="10" date="2005-06-17">
	  Fixed a severe bug in Windows where data could be lost when sending large packets via RFComm.
    </build>    
    <build value="11" date="2005-07-13">
	  Fixed a bug in OS X.4 that prevented newly discovered devices to have their names discovered succesfully.
	  Changed ConnectionNotifiers behaviour to create the SDPRecord with Connector.open() and not with Notifier.acceptAndOpen(). This way, ServiceRecords can be modified before the service is actually offered.
	  Besides, the specification asks for this behaviour.
    </build>    
    <build value="12" date="2005-07-17">
     Fixed serveral issues in Service Record Handling and Notifier creation and deletion. 
     Now L2CAP Connection can be re-offered by calling acceptAndOpen() several time.
     Fixed a Problem with RFComm connection where data could be lost when close() was called too early. Now flush() can be used to clear the buffer before closing.
    </build>
    <build value="13" date="2005-07-28">
     Fixed some PocketPC native problems with AttachCurrentThread, where GetEnv would not really get the Environment in CrEme.
     Native side is now calling deviceDiscovered() in BlueZ to notifiy of newly found devices. That way we don't need to store the DiscoveryAgent.
    </build>
    <build value="14" date="2005-08-02">
     Fixed a bug in OBEX, where headers were sent twice. This mad the Motorola RAZR phone disconnect.
    </build>
    <build value="15" date="2005-08-14">
     Added code in LibLoader to try and find old leftovers of the native library and delete them.
     Fixed a native bug in Windows, where Connection-closed messages could cause the application to crash.
    </build>
    <build value="16" date="2005-09-08">
	 Prepared integration of Microsoft Bluetooth Stack.
	 Fixed a problem in UUID generation from 16 Byte values
	 Fixed a problem in DeviceClass where MajorDevice class was shifted >>8 which was wrong.
    </build>
    <build value="17" date="2005-09-17">
	 Fixed a bug in getFriendlyName for Microsoft that does not support this. The name discovered at device discovery time is used even when called with true as argument.
	 Prevented native stuff to be initialized multiple times.
    </build>
   </revision>
   <revision value="2">
    <build value="0" date="2005-10-19">
	 Release with support for Microsoft BT-Stack.
	 Automatic discovery of used Stack.
    </build>    
    <build value="1" date="2005-11-16">
	 Update in RemoteDevice.getRemoteDevice(Connection) to throw an IOException if the connection was closed.
	 Fixed in Native methods to prevent out of memory exception when receiving to much data.
    </build>    
    <build value="2" date="2005-11-28">
	 Updates to handle requesting of specific local channels in a connectionURL. This goes beyond the JSR-82 specification.
	 Update in native part for Windows/Microsoft to set Discoverable/Not Discoverable.
    </build>    
    <build value="3" date="2005-11-30">
		Support for SDP-String Element longer than 255 characters.
    </build>    
   </revision>
   <revision value="3">
    <build value="0" date="2005-12-08">
     -many improvements in native code on all plattforms.
     -now handles multithreaded acceptAndOpen() to serve multiple connections on the same channel
     -fully MIDP-Compliant. Works with J9 MIDP (needs special distribution)
     -Exception handling in callback methods deviceDiscovered and servicesDiscovered
     -Removed many of the synchronized tags in BlueZ to be able to open Connections from multiple threads at the same time.
    </build>
    <build value="1" date="2005-12-22">
     -Fixed a locking bug in BTConnection that could cause connection closings to hang.
    </build>
    <build value="2" date="2006-01-23">
     -RemoteDevice.selectService() now conforms to the spec.
     -LocalDevice.getRecord() now conforms to the spec.
     -Many fixes in MacOS X native code.
    </build>
    <build value="3" date="2006-01-27">
	-Make BlueZException a subclass of IOException
    </build>
    <build value="4" date="2006-01-30">
	-Fixed a bug in DataElement that would make it throw an Exception when handling 0-length strings.
	-Fixed some memory leaks in Windows (MS)
	-Now catching exceptions in DiscoveryListener callbacks on the java side.
	-Sending of 0-length L2CAP-packet does not throw a Connection Closed Exception but an apropriate text.
    </build>
    <build value="5" date="2006-02-21">
     -changed the authenticate method in BlueZ to accept a JSR-82 style bluetooth address
     -added an unPair method to BlueZ
     fixed a bug in de.avetana.bluetooth.connection.ConnectionNotifier that would make the app crash when acceptAndOpen was called on a closed notifier.
    </build>
    <build value="6" date="2006-02-23">
    	-Implemented new licensing scheme to include a signed license.txt file that contains validity, possibilities and valid addresses.
    	-Create class SessionHandler that handles an OBEX Server connection after acceptAndOpen in a separate Thread. Now OBEX Conenctions can be offered right after acceptAndOpen has been called.
     -Changed managmenet of ServiceRecord-updating in order to get it to work with J9-MIDP. ConnectionNotifiers do now implement a RecordOwner interface that gives access to the service record.
     This also fixes a problem where only one ServiceRecord at a time could be manipulated.
	</build>
    <build value="7" date="2006-03-03">
	 -Two OBEX patches to handle 0-length name headers and set the final bit in a multipart OBEX-Get operation
	 -Fixed a locking problem in L2CapConnection where the notification of closing the channel did not get through.
    </build>
    <build value="8" date="2006-04-11">
	 -Finalized Macintosh universal support
	 -Support for Cached Inquiries on Microsoft stack.
    </build>
    <build value="9" date="2006-06-14">
	 -Multiple connections to same PSM/Channel now supported in linux
	 -RemoteDevice.getRemoteDevice() does now handle OBEXConnections and SessionNotifiers.
    </build>
    <build value="10" date="2006-06-22">
	-Fixed a native bug in OS X that made getRemoteName() crash.
	-Fixed a bug for some J9 implementation where the dll file cannot be loaded from within the JAR file.
    </build>
    <build value="11" date="2006-07-04">
	-Fixed a bug that prevented concurrent service searches to work.
	-Added support for single system licenses.
	-Changed name of license file to license.abt
	-Fixed a bug for Widcomm where inqListSize was not initialized with 0 which could cause a crash on getRemoteName().
    </build>
    <build value="12" date="2007-01-02">
		-Fixed a memory leak in native code in the getClass method.
		-Fixed memory leaks when sending data.
		-Fixed a bug in native widcomm code that would not close a server connection when you offer a service and close it without it being connected.
		-Added a method for Widcomm to send native HCI commands (Vendor specific HCI commands).
    </build>
    <build value="12a" date="2007-01-02">
	-Fixed annoying messages in OS X about Memory leaks.
    </build>
    <build value="13" date="2007-02-01">
	 Added a static function in BlueZ to change the local device name (works only for Widcomm)
	 Detaching threads in Widcomm after being attached (Not on CE since this breaks CrEme).
	 Fixed a bug where the ServiceClass was shifted 13 bits to the right where it musten't be.
    </build>
    <build value="14" date="2007-03-01">
		Many fixes for creme. Need to add -Dcreme.noblock=true on startup.
		Added debug output. add -Dde.avetana.bluetooth.debug=true on startup
	    Detaching Thread every time after Attaching (Widcomm). Not using GetEnv anymore.
	    Fixed a bug that could cause a "Signature of license file invalid" error on start.
	    Autodetection of Widcomm/Microsoft Stack on WinCE.
	    Fixed a bug that could cause crashes in MacOS X when two L2CAP connections were open and sending data while the connections were not
	    yet ready in Java.
    </build>
    <build value="14a" date="2007-03-03">
    	more Memory leaks stuffed
    	fixed a possible crash (Widcomm) when a notifier was opened and closed without acceptAndOpen
    	removed unnecessary getMethod calls in newData callback methods. replaced them with static methods.
    </build>
    <build value="14b" date="2007-03-04">
 		Changed the getEnv/AttachCurrentThread scheme for Widcomm.
    </build>
    <build value="14c" date="2007-03-06">
		Put reading data in Widcomm in a Java Thread to support CrEme and save ressources. No Java callbacks from non-java threads anymore.
    </build>
    <build value="14d" date="2007-03-07">
		Put inquiry in Widcomm in a Java Thread to support CrEme and save ressources. No Java callbacks from non-java threads anymore.
    </build>
    <build value="15" date="2007-03-17">
     -Put all new Java threads in a Thread Pool. Thread pool KeepAlive time can be set via Parameter de.avetana.bluetooth.ThreadPool.keepAliveTime in milliseconds. 0 is default and thus behaviour as before.
     For J9 you should set this quite high to never discard any threads created because J9 does not properly clean up created threads.
     -finer Mutex locking for WIdcomm stack.
     -Removed all Thread Attach occurrences in Widcomm and put Waiting for ServerConnection established in Main Thread.
    </build>   
    <build value="15b" date="2007-03-19">
     -fixed a double free memory leak in widcomm.
    </build>   
    <build value="15c" date="2007-03-20">
     -set the default MTU size fo incoming and outgoing connection in Widcomm to 1000 (will be shrinked to 666). Makes transfers MUCH faster.
    </build>   
    <build value="15d" date="2007-03-21">
	 -correctly closing HANDLES in Widcomm threads when the connection is closed
    </build>   
   <build value="15e" date="2007-03-23">
	 Moved the deletion of Handles in a cleanup method to avoid crashes with CrEme.
	 Added wait() after registerService() to avoid crashes when a notifier is closed before it is actually finished
    </build>   
   <build value="15f" date="2007-03-27">
    -fixed a small leak in authenticate.
   </build>
   <build value="16a" date="2007-04-20">
	-fixed native encoding problem on all plattforms
	-fixed a bug in Widcomm that caused a crash with widomm 5.1. The connection is now closed from within the EventReceived method when a connection_error event is received.
   </build>
   <build value="16b" date="2007-04-27">
	-fixed a bug in Widcomm that caused stale server connections due to duplicate CONNECTION_EVENTs (Widcomm 5.1 only ?).
   </build>
   <build value="16c" date="2007-05-01">
    -finally fixed the "Signature of license file invalid" bug.
   </build>
   <build value="16d" date="2007-05-07">
    -Fixed a SDP Record handling bug in widcomm for HDI scanning
    -Added a MacOS X function to remove the SyncPDA-Service in BlueZ.
   </build>
   <build value="16e" date="2007-05-08">
	 -Fixed pairing in MacOS X
   </build>
     <build value="16f" date="2007-05-10">
	 -Changed data sending to be asynchronous in OS X for faster transfers with external dongles.
   </build>
     <build value="17" date="2007-06-19">
	 -Added a timeout for connection openings in Windows (Widcomm / MS) With de.avetana.bluetooth.connection.Connector.openWithTimeout(String, int);
  	 -Fixed a bug ind SDPRecord handling not handeling INT_8 data.
  	 -added compatibility exceptions in OBEX part
   </build>
 
   </revision>
  </version>
</avetanaBluetooth>
